{"version":3,"sources":["./src/app/bingo/bingo-routing.module.ts","./src/app/bingo/bingo.module.ts","./src/app/bingo/grid/grid.component.html","./src/app/bingo/grid/grid.component.ts","./src/app/bingo/bingo.component.html","./src/app/bingo/bingo.component.ts"],"names":[],"mappings":"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","file":"bingo-bingo-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { BingoComponent } from './bingo.component';\nimport { GridComponent } from './grid/grid.component';\n\nconst routes: Routes = [\n  { path: '', component: BingoComponent },\n  { path: 'grid', component: GridComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class BingoRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { BingoRoutingModule } from './bingo-routing.module';\nimport { BingoComponent } from './bingo.component';\nimport { GridComponent } from './grid/grid.component';\n\n\n@NgModule({\n  declarations: [\n    BingoComponent,\n    GridComponent,\n  ],\n  imports: [\n    CommonModule,\n    BingoRoutingModule\n  ]\n})\nexport class BingoModule { }\n","<div class=\"border grid-container card mb-2 col\">\n    <div class=\"m-2\">\n        <div class=\"row\">\n            <div *ngFor=\"let character of bingo\" class=\"col text-center font-bold grid-block grid-header\">\n                {{character}}\n            </div>\n        </div>\n        <div class=\"row\" *ngFor=\"let cards of grid; let i = index;\">\n            <div [ngClass]=\"{free: card === 'FREE' || card.startsWith('*')}\" *ngFor=\"let card of cards\"\n                class=\"col grid-block text-center font-bold border\">{{card}}</div>\n        </div>\n    </div>\n</div>","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-grid',\n  templateUrl: './grid.component.html',\n  styleUrls: ['./grid.component.scss'],\n})\nexport class GridComponent implements OnInit {\n  @Input() grid: string[][] = [];\n  bingo = 'BINGO'.split('');\n\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<div class=\"grid-container col-12\">\n    <h1 class=\"text-center text-white m-3 title\">Let's Play!</h1>\n\n    <hr class=\"mt-4\">\n    <ng-container #gameNotOver *ngIf=\"!gameOver\">\n        <p class=\"text-center text-white m-3 title\">Draw random balls to fill the blocks..</p>\n        <div class=\"row\">\n            <div class=\"col\">\n                <h1 class=\"text-center text-white m-3 title\">{{balls.length}}</h1>\n                <p class=\"text-center text-white m-3 title\">Remaining Balls</p>\n            </div>\n            <div class=\"col\">\n                <h1 class=\"text-center text-white m-3 title\">{{selectedBall}}</h1>\n                <div class=\"container\">\n                    <div class=\"text-center\">\n                        <button class=\"btn spin-btn m-2\" (click)=\"onSpin()\">Draw!</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n        \n        <div class=\"container\">\n            <app-grid [grid]=\"grid\"></app-grid>\n            <div class=\"card\">\n                <p class=\"text-center m-3 title\">Remaining Balls</p>\n                <p>{{balls | json}}</p>\n            </div>\n        </div>\n    </ng-container>\n\n    <ng-container #gameOver *ngIf=\"gameOver\">\n        <h1 class=\"text-center text-danger m-3 title\">Game Over</h1>\n        <p class=\"text-center text-white m-3 title m-3 text-center\">You ran out of balls to draw</p>\n    </ng-container>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-bingo',\n  templateUrl: './bingo.component.html',\n  styleUrls: ['./bingo.component.scss'],\n})\nexport class BingoComponent implements OnInit {\n  grid: string[][] = [];\n  balls: number[] = [];\n  characters = 'BINGO';\n  selectedBall = 0;\n  bingoDraw = Array.from(Array(75).keys());\n  gameOver = false;\n\n  constructor() {}\n\n  ngOnInit(): void {\n    this.generateInitialGrid();\n    this.generateBalls();\n  }\n\n  /**\n   * Initial display of the populated grids\n   */\n  generateInitialGrid() {\n    for (let index = 0; index < 5; index++) {\n      const row = [];\n      for (let k = 0; k < 5; k++) {\n        if (index === 2 && k === 2) {\n          row.push('FREE');\n        } else {\n          row.push(`${Math.floor(Math.random() * 100)}`);\n        }\n      }\n      this.grid.push(row);\n    }\n  }\n\n  /**\n   * Generate balls to draw from\n   */\n  generateBalls() {\n    for (let index = 0; index < this.bingoDraw.length; index++) {\n      this.balls.push(Math.floor(Math.random() * this.bingoDraw.length));\n    }\n  }\n\n  onSpin() {\n    if (this.balls.length > 0) {\n      const random = Math.floor(Math.random() * this.balls.length);\n      console.log(random);\n      console.log(this.balls);\n      console.log(this.balls[random]);\n      this.selectedBall = this.balls[random];\n      this.balls.splice(random, 1);\n\n      for (let i = 0; i < this.grid.length; i++) {\n        const cards = this.grid[i];\n        for (let j = 0; j < cards.length; j++) {\n          const card = cards[j];\n          if (Number(card) === this.selectedBall) {\n            cards[j] = `*${cards[j]}`;\n          }\n        }\n      }\n    } else {\n      this.gameOver = true;\n    }\n  }\n}\n"],"sourceRoot":"webpack:///"}